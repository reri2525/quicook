name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1                   
  ECR_REPOSITORY_BACK: quicook-back
  ECS_SERVICE_BACK: quicook-back           
  ECS_CLUSTER: quicook                
  ECS_TASK_DEFINITION_BACK: back-task.json                             
  CONTAINER_NAME_BACK: quicook-back      
                                              

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
      
      - name: Docker Build
        run: |
          docker-compose build

      - name: Bundle Install
        run: |
          docker-compose run back bundle install 
          mkdir ./back/tmp/sockets
      
      - name: Create MasterKey
        run: |
          rm -rf ./back/config/credentials.yml.enc
          docker-compose run -e EDITOR=vim back bin/rails credentials:edit
          sudo chmod -R 777 ./back/config/master.key
      
      - name: Backend Test
        run: |
          docker-compose run back rake db:create
          docker-compose run back rake db:migrate
          docker-compose run back rspec

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag quicook_back:latest public.ecr.aws/v2y9n7g3/quicook-back:latest
          docker push public.ecr.aws/v2y9n7g3/quicook-back:latest

      - name: Fill in the new image ID in the Amazon ECS task definition back
        id: task-def-back
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_BACK }}
          container-name: ${{ env.CONTAINER_NAME_BACK }}
          image: public.ecr.aws/v2y9n7g3/quicook-back:latest

      - name: Deploy Amazon ECS task definition back
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_BACK }}
          service: ${{ env.ECS_SERVICE_BACK }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

   